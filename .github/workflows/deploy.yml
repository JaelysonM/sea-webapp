name: Build and Deploy CD Workflow

on:
  push:
    branches: [master, develop]
  workflow_dispatch:

jobs:
  deploy:
    name: Building and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Node.js ⚙️
        uses: actions/setup-node@v2
        with:
          node-version: '18.20'

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install dependencies 📦
        run: yarn

      - name: Test production build 📦
        run: yarn build
        env:
          CI: false
          VITE_API_SERVER_URL: ${{ github.ref == 'refs/heads/master' && secrets.API_PROD || secrets.API_DEV }}

      - name: Preparing production stage folder 🚀🚧
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSW }}
          port: 22
          script: rm -rf /var/www/production/*

      - name: Copy and Deploy to production stage 🚀
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: appleboy/scp-action@v0.1.7
        with:
          source: dist/*
          target: /var/www/production
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSW }}
          strip_components: 1

      - name: Preparing development stage folder 🚀🚧
        if: ${{ github.ref == 'refs/heads/develop' }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSW }}
          port: 22
          script: rm -rf /var/www/staging/*

      - name: Copy and Deploy to development stage 🚀
        if: ${{ github.ref == 'refs/heads/develop' }}
        uses: appleboy/scp-action@v0.1.7
        with:
          source: dist/*
          target: /var/www/staging
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSW }}
          strip_components: 1

  notify-status:
    name: Notify deploy status 🚀
    needs: [deploy]
    if: always()
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
      - name: Send success build message to Telegram 💬✅
        if: ${{ always() && (needs.deploy.result == 'success') }}
        uses: appleboy/telegram-action@master
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
          PR_NUMBER_OR_MASTER: ${{ github.event.number == 0 && 'stable from master' ||  format('#{0}', github.event.number)  }}
          STAGE_NAME: ${{ github.ref == 'refs/heads/master' && 'produção' || 'desenvolvimento' }}

        with:
          to: ${{ secrets.TELEGRAM_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdown
          message: |
            ✅ Nova versão de *${{ env.STAGE_NAME }}* disponível!
            ⎿ 📌 Autor responsável: ${{ github.actor }}

            ✏️ De: [${{ github.repository }}](${{ github.repository.html_url }})

            🏷️ Versão : ```${{ env.PR_NUMBER_OR_MASTER }}```
            ⎿ 🛠️ Build : #```${{ github.run_number }}```

            🧬 Alterações: [Aqui!](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
            📦 Deploy: [Aqui!](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

            Esta é uma mensagem automática e informativa. Por favor, não responda.

      - name: Send error build message to Telegram 💬❌
        if: ${{ always() && (needs.deploy.result == 'failure') }}
        uses: appleboy/telegram-action@master
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
          PR_NUMBER_OR_MASTER: ${{ github.event.number == 0 && 'stable from master' ||  format('#{0}', github.event.number)  }}
          STAGE_NAME: ${{ github.ref == 'refs/heads/master' && 'produção' || 'desenvolvimento' }}

        with:
          to: ${{ secrets.TELEGRAM_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdown
          message: |
            ❌ Nova versão de *${{ env.STAGE_NAME }}* não disponível, pois falhou!
            ⎿ 📌 Autor responsável: ${{ github.actor }}

            ✏️ De: [${{ github.repository }}](https://github.com/${{ github.repository }})

            🏷️ Versão : ```${{ env.PR_NUMBER_OR_MASTER }}```
            ⎿ 🛠️ Build : #```${{ github.run_number }}```

            🧬 Alterações: [Aqui!](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
            📦 Deploy: [Aqui!](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

            Esta é uma mensagem automática e informativa. Por favor, não responda.
